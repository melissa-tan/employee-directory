{"version":3,"sources":["components/Table.js","components/Header.js","components/Search.js","App.js","index.js"],"names":["Table","employees","useState","sortState","setSortState","sortedEmployees","setSortedEmployees","sort","column","columnArray","split","updateSort","length","a","b","nameA","nameB","className","onClick","icon","faSort","map","employee","index","alt","name","last","src","picture","medium","first","email","phone","location","country","login","uuid","colSpan","Header","Search","filter","searchRef","useRef","useEffect","current","focus","type","ref","onChange","placeholder","App","setEmployees","filteredEmployees","setFilteredEmployees","axios","get","request","data","results","fetchData","e","keyword","target","value","toLowerCase","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3626f07c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Table({ employees }) {\r\n    const [sortState, setSortState] = useState(true);\r\n    const [sortedEmployees, setSortedEmployees] = useState([]);\r\n\r\n    const sort = (column) => {\r\n        const columnArray = column.split('.');\r\n        const current =\r\n            sortedEmployees.length > 0 ? sortedEmployees : employees;\r\n        const updateSort = current.sort((a, b) => {\r\n            const nameA =\r\n                columnArray.length === 1\r\n                    ? a[column]\r\n                    : a[columnArray[0]][columnArray[1]];\r\n            const nameB =\r\n                columnArray.length === 1\r\n                    ? b[column]\r\n                    : b[columnArray[0]][columnArray[1]];\r\n            if (nameA < nameB) {\r\n                return sortState ? -1 : 1;\r\n            }\r\n            if (nameA > nameB) {\r\n                return sortState ? 1 : -1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        setSortedEmployees(updateSort);\r\n        setSortState(!sortState);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={'table-container'}>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Photo</th>\r\n                        <th onClick={() => sort('name.first')}>First&nbsp;\r\n                            <FontAwesomeIcon icon={faSort} /></th>\r\n                        <th onClick={() => sort('name.last')}>Last&nbsp;\r\n                            <FontAwesomeIcon icon={faSort} /></th>\r\n                        <th onClick={() => sort('email')}>Email&nbsp;\r\n                            <FontAwesomeIcon icon={faSort} /></th>\r\n                        <th onClick={() => sort('phone')}>Phone&nbsp;\r\n                            <FontAwesomeIcon icon={faSort} /></th>\r\n                        <th onClick={() => sort('location.country')}>Location&nbsp;\r\n                            <FontAwesomeIcon icon={faSort} /></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {employees && employees.length > 0 ? (\r\n                        employees.map((employee, index) => (\r\n                            <tr key={employee.login.uuid} className={index % 2 === 0 ? 'odd' : 'even'}>\r\n                                <td>\r\n                                    <img className={'photo'} alt={employee.name.last} src={employee.picture.medium} />\r\n                                </td>\r\n                                <td>{employee.name.first}</td>\r\n                                <td>{employee.name.last}</td>\r\n                                <td>{employee.email}</td>\r\n                                <td>{employee.phone}</td>\r\n                                <td>{employee.location.country}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan={6} className={'no-results'}>\r\n                                No Results Found!\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <h1>Employee Directory</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\n\r\nexport default function Search({ filter }) {\r\n    const searchRef = useRef('')\r\n    useEffect(() => {\r\n        searchRef.current.focus()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <input type='text' ref={searchRef} onChange={filter} className='input' placeholder=\"Search by employee's first or last name\" />\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Table from './components/Table';\nimport Header from './components/Header';\nimport Search from './components/Search';\n\nfunction App() {\n    const [employees, setEmployees] = useState([]);\n    const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n    const filter = (e) => {\n        const keyword = e.target.value;\n        if (keyword !== '') {\n            const results = employees.filter((employee) => {\n                return (\n                    employee.name.first.toLowerCase().startsWith(keyword.toLowerCase()) ||\n                    employee.name.last.toLowerCase().startsWith(keyword.toLowerCase())\n                );\n            });\n            setFilteredEmployees(results);\n        } else {\n            setFilteredEmployees(employees);\n        }\n    };\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get('https://randomuser.me/api/?results=20');\n            setEmployees(request.data.results);\n            setFilteredEmployees(request.data.results);\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <Header />\n            <Search filter={filter}/>\n            <Table employees={filteredEmployees} />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}